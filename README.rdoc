== Uber Email Service

The webapp is deployed on heroku:
http://uber-test-mailer.herokuapp.com

== Tech Stacks

I choosed backend/full stack track, since in my current product (Family.me), 
I have been working mostly on backend & middle layer, built a private social network
from scratch, providing REST API for frontend/mobile team. I'm also involved in some
frontend work in family.me so I have experience with HTML5,CSS3 and Backbone.
The frame work I use is Ruby on Rails, which I've been used for ~3 years and feel
pretty comfortable. Python is surely another elegant language that I've used back in 
school.


== About the Implementation

I could make the email service a REST API, return JSON response upon request in the 
controller. But in this prototype I just redirected to the current page for simplicity. 
For the frontend I used HTML5 to do the form validation. If there's more time, I'd 
like to use Backbone to organize the data and do the validation. For the popup message
I could also use a nice popup instead of rails flash.

== Discription about Content

app/assets
  Contains subdirectories for images, stylesheets, and JavaScript files.

app/controllers
  Holds controllers to call the email service.
  
app/views
  Holds the view and layout files for the app.

app/services
  Holds email services that handle validation, failover and delivery.

config
  Holds the configuration file for mailgun and mandrill.
  
config/initialzer
  Load the mailgun and mandrill config file when the app launch.

lib
  Application specific libraries, holds the modules for mailgun and mandrill config.

log
  Holds the log files.

spec
  Holds the test files for email service.

Gemfile
  Lists the gems that need to be included.
  
== Link to My Profile

https://www.linkedin.com/in/brucexlin
